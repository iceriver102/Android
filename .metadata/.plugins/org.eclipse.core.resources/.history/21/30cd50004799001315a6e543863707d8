package com.google.GCM;

import com.example.bmsaltamedia.MainActivity;
import com.example.bmsaltamedia.R;

import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.widget.Toast;

public class runRemindNotification extends Service {
	private static final String TAG = "httpSevicePush";

	private static int NOTIFY_ME_ID = 1337;
	private Thread thread;
	private boolean flag;
	private static int time = 5000;
	Context context;

	@Override
	public IBinder onBind(Intent intent) {
		return null;
	}

	@Override
	public void onCreate() {
		context = this;

	}

	@SuppressWarnings("deprecation")
	@Override
	public void onDestroy() {

		try {
			if (thread.isAlive())
				thread.stop();
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

	@Override
	public void onStart(Intent intent, int startid) {
		thread = new Thread(new Runnable() {
			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					while (true) {
						runNotifycation();
						Thread.sleep(runRemindNotification.time);
					}
				} catch (Exception e) {

				}
			}
		});
		try {
			thread.start();
		} catch (Exception ex) {

		}

	}

	public static void setTime(int time) {
		if (time > 0)
			runRemindNotification.time = time;
	}

	@SuppressWarnings("deprecation")
	public void createNotification(Context context, String title, String msg) {

		NotificationManager notificationManager = (NotificationManager) context
				.getSystemService(Context.NOTIFICATION_SERVICE);
		Notification notification = new Notification(R.drawable.ic_launcher,
				this.getString(R.string.app_name), System.currentTimeMillis());
		// Hide the notification after its selected
		notification.flags |= Notification.FLAG_AUTO_CANCEL;
		Intent intent = new Intent(context, MainActivity.class);
		PendingIntent pendingIntent = PendingIntent.getActivity(context, 0,
				intent, PendingIntent.FLAG_CANCEL_CURRENT);
		notification.setLatestEventInfo(context, title, msg, pendingIntent);

		notificationManager.notify(NOTIFY_ME_ID, notification);

	}

	public void runNotifycation() {
		flag = getHttpJson();
		if (flag) {
			try {
				this.createNotification(context, "demo	title", "demo");
			} catch (Exception ex) {

			}
		} else {
			onDestroy();
		}
	}

	public boolean getHttpJson() {

		return true;
	}

}
